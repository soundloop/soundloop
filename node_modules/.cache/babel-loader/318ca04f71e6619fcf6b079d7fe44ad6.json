{"ast":null,"code":"import _objectSpread from \"/Users/ericduong/Documents/repos/3cavs/soundloop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_LOOP, UPDATE_LOOP, ACTIVATE_LOOP, UPDATE_LOOP_SPEED } from \"../actions/loops\";\nimport { TRASH_ALL_LINEAR, TRASH_ALL_ANGULAR } from \"../actions/shared\";\n/*\nThe loops reducer updates the store for all loop-related functions, including adding a new loop to the store, \nactivating a loop, and resetting all loops\n*/\n\nexport default function loops(state = [], action) {\n  switch (action.type) {\n    case ADD_LOOP:\n      return [...state, {\n        id: action.id,\n        radius: action.radius,\n        speed: 82.5,\n        rotation: action.rotation,\n        active: action.active\n      }];\n\n    case TRASH_ALL_LINEAR:\n      nextLoopId = 0;\n      return [];\n\n    case TRASH_ALL_ANGULAR:\n      nextLoopId = 0;\n      return [];\n\n    case UPDATE_LOOP:\n      return [...state.slice(0, action.id), _objectSpread({}, state[action.id], {\n        rotation: action.rotation\n      }), ...state.slice(action.id + 1)];\n\n    case UPDATE_LOOP_SPEED:\n      return [...state.slice(0, action.id), _objectSpread({}, state[action.id], {\n        speed: action.speed\n      }), ...state.slice(action.id + 1)];\n\n    case ACTIVATE_LOOP:\n      return [...state.slice(0, action.id), _objectSpread({}, state[action.id], {\n        active: action.active,\n        stroke: action.stroke\n      }), ...state.slice(action.id + 1)];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/3cavs/soundloop/src/reducers/loops.js"],"names":["ADD_LOOP","UPDATE_LOOP","ACTIVATE_LOOP","UPDATE_LOOP_SPEED","TRASH_ALL_LINEAR","TRASH_ALL_ANGULAR","loops","state","action","type","id","radius","speed","rotation","active","nextLoopId","slice","stroke"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,aAAhC,EAA+CC,iBAA/C,QAAwE,kBAAxE;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,mBAApD;AAEA;;;;;AAKA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,QAAL;AACE,aAAO,CACL,GAAGO,KADE,EAEL;AACEG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADb;AAEEC,QAAAA,MAAM,EAAEH,MAAM,CAACG,MAFjB;AAGEC,QAAAA,KAAK,EAAG,IAHV;AAIEC,QAAAA,QAAQ,EAAEL,MAAM,CAACK,QAJnB;AAKEC,QAAAA,MAAM,EAAEN,MAAM,CAACM;AALjB,OAFK,CAAP;;AAWF,SAAKV,gBAAL;AACEW,MAAAA,UAAU,GAAG,CAAb;AACA,aAAO,EAAP;;AAEF,SAAKV,iBAAL;AACEU,MAAAA,UAAU,GAAG,CAAb;AACA,aAAO,EAAP;;AAEF,SAAKd,WAAL;AACE,aAAO,CACL,GAAGM,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeR,MAAM,CAACE,EAAtB,CADE,oBAGAH,KAAK,CAACC,MAAM,CAACE,EAAR,CAHL;AAIHG,QAAAA,QAAQ,EAAEL,MAAM,CAACK;AAJd,UAML,GAAGN,KAAK,CAACS,KAAN,CAAYR,MAAM,CAACE,EAAP,GAAY,CAAxB,CANE,CAAP;;AASF,SAAKP,iBAAL;AACE,aAAO,CACL,GAAGI,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeR,MAAM,CAACE,EAAtB,CADE,oBAGAH,KAAK,CAACC,MAAM,CAACE,EAAR,CAHL;AAIHE,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAJX,UAML,GAAGL,KAAK,CAACS,KAAN,CAAYR,MAAM,CAACE,EAAP,GAAY,CAAxB,CANE,CAAP;;AASF,SAAKR,aAAL;AACE,aAAO,CACL,GAAGK,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeR,MAAM,CAACE,EAAtB,CADE,oBAGAH,KAAK,CAACC,MAAM,CAACE,EAAR,CAHL;AAIHI,QAAAA,MAAM,EAAEN,MAAM,CAACM,MAJZ;AAKHG,QAAAA,MAAM,EAAET,MAAM,CAACS;AALZ,UAOL,GAAGV,KAAK,CAACS,KAAN,CAAYR,MAAM,CAACE,EAAP,GAAY,CAAxB,CAPE,CAAP;;AAUF;AACE,aAAOH,KAAP;AArDJ;AAuDD","sourcesContent":["import { ADD_LOOP, UPDATE_LOOP, ACTIVATE_LOOP, UPDATE_LOOP_SPEED } from \"../actions/loops\";\nimport { TRASH_ALL_LINEAR, TRASH_ALL_ANGULAR } from \"../actions/shared\";\n\n/*\nThe loops reducer updates the store for all loop-related functions, including adding a new loop to the store, \nactivating a loop, and resetting all loops\n*/\n\nexport default function loops(state = [], action) {\n  switch (action.type) {\n    case ADD_LOOP:\n      return [\n        ...state,\n        {\n          id: action.id,\n          radius: action.radius,\n          speed:  82.5,\n          rotation: action.rotation,\n          active: action.active\n        }\n      ];\n\n    case TRASH_ALL_LINEAR:\n      nextLoopId = 0;\n      return [];\n\n    case TRASH_ALL_ANGULAR:\n      nextLoopId = 0;\n      return [];\n    \n    case UPDATE_LOOP:\n      return [\n        ...state.slice(0, action.id),\n        {\n          ...state[action.id],\n          rotation: action.rotation\n        },\n        ...state.slice(action.id + 1)\n      ];\n\n    case UPDATE_LOOP_SPEED:\n      return [\n        ...state.slice(0, action.id),\n        {\n          ...state[action.id],\n          speed: action.speed\n        },\n        ...state.slice(action.id + 1)\n      ];\n\n    case ACTIVATE_LOOP:\n      return [\n        ...state.slice(0, action.id),\n        {\n          ...state[action.id],\n          active: action.active,\n          stroke: action.stroke\n        },\n        ...state.slice(action.id + 1)\n      ];\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}