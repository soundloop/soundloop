{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop-cavs/src/components/LeftNav/ShareMenu/UploadPopUp.js\";\nimport Dropzone from \"react-dropzone\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { importFile } from \"../../../actions/shared\";\n\nclass Upload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  //code below is from React Dropzone docs\n  //https://github.com/react-dropzone/react-dropzone\n  onDrop(acceptedFiles) {\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log(\"file reading was aborted\");\n\n    reader.onerror = () => console.log(\"file reading has failed\");\n\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      const binaryStr = reader.result;\n      var importedLoop = JSON.parse(binaryStr);\n      this.props.dispatch(importFile(importedLoop));\n    };\n\n    acceptedFiles.forEach(file => reader.readAsBinaryString(file));\n    this.handleClose();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: acceptedFiles => this.onDrop(acceptedFiles),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      className: \"no-dec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(FontAwesomeIcon, {\n      className: \"plus-icon inl-blk fa-lg\",\n      icon: faPlusCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"light inl-blk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"IMPORT\")))));\n  }\n\n}\n\nexport default connect()(UploadPopUp);","map":{"version":3,"sources":["/Users/garrett/repos/soundloop-cavs/src/components/LeftNav/ShareMenu/UploadPopUp.js"],"names":["Dropzone","React","FontAwesomeIcon","faPlusCircle","connect","importFile","Upload","Component","constructor","props","handleClickOpen","setState","open","handleClose","state","onDrop","bind","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","importedLoop","JSON","parse","dispatch","forEach","file","readAsBinaryString","render","getRootProps","getInputProps","UploadPopUp"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,eARmB,GAQD,MAAM;AACtB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAZkB;;AAAA,SAcnBC,WAdmB,GAcL,MAAM;AAClB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAhBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKG,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAYD;AACA;AAEAD,EAAAA,MAAM,CAACE,aAAD,EAAgB;AACpB,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAvB;;AACAJ,IAAAA,MAAM,CAACK,OAAP,GAAiB,MAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB;;AACAJ,IAAAA,MAAM,CAACM,MAAP,GAAgB,MAAM;AACpB;AACA,YAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAzB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAnB;AACA,WAAKhB,KAAL,CAAWqB,QAAX,CAAoBzB,UAAU,CAACsB,YAAD,CAA9B;AACD,KALD;;AAOAV,IAAAA,aAAa,CAACc,OAAd,CAAsBC,IAAI,IAAId,MAAM,CAACe,kBAAP,CAA0BD,IAA1B,CAA9B;AACA,SAAKnB,WAAL;AACD;;AAEDqB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,OAAO,EAAE,KAAKxB,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEO,aAAa,IAAI,KAAKF,MAAL,CAAYE,aAAZ,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEkB,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAD,KACC,6CAASD,YAAY,EAArB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEE,oBAAC,eAAD;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,IAAI,EAAEjC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAFJ,CADF,CADF,CADF;AAmBD;;AA1DkC;;AA6DrC,eAAeC,OAAO,GAAGiC,WAAH,CAAtB","sourcesContent":["import Dropzone from \"react-dropzone\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { importFile } from \"../../../actions/shared\";\n\nclass Upload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  //code below is from React Dropzone docs\n  //https://github.com/react-dropzone/react-dropzone\n\n  onDrop(acceptedFiles) {\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log(\"file reading was aborted\");\n    reader.onerror = () => console.log(\"file reading has failed\");\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      const binaryStr = reader.result;\n      var importedLoop = JSON.parse(binaryStr);\n      this.props.dispatch(importFile(importedLoop));\n    };\n\n    acceptedFiles.forEach(file => reader.readAsBinaryString(file));\n    this.handleClose();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div onClick={this.handleClickOpen}>\n          <Dropzone onDrop={acceptedFiles => this.onDrop(acceptedFiles)}>\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps()} className=\"no-dec\">\n                <input {...getInputProps()} />\n                <FontAwesomeIcon\n                  className=\"plus-icon inl-blk fa-lg\"\n                  icon={faPlusCircle}\n                />\n\n                <h3 className=\"light inl-blk\">IMPORT</h3>\n              </div>\n            )}\n          </Dropzone>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect()(UploadPopUp);\n"]},"metadata":{},"sourceType":"module"}