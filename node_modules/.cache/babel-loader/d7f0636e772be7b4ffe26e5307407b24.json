{"ast":null,"code":"import loops from \"./loops\";\nimport tones from \"./tones\";\nimport shared from \"./shared\";\nimport cord from \"./cord\";\nimport file from \"./file\";\nimport { combineReducers } from \"redux\"; //  The index reducer combines all of the other reducers to form our store.\n//  We pass it into a higher-order function, appReducer,\n//  so that we can overwrite the overall state on file import.\n\nconst appReducer = combineReducers({\n  loops,\n  tones,\n  cord,\n  shared,\n  file\n});\nexport default function (state, action) {\n  if (action.type === \"IMPORT_FILE\") {\n    state.tones = action.data.tones;\n    state.loops = action.data.loops;\n    state.shared = {\n      playing: false,\n      center: {\n        x: 380 + (window.innerWidth - 380) / 2,\n        y: window.innerHeight / 2\n      },\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      muted: false,\n      mode: action.data.shared.mode,\n      selectedSustain: \"8n\",\n      fileName: action.data.shared.fileName,\n      volume: 0,\n      tempo: action.data.shared.tempo,\n      toneSizes: {\n        \"32n\": window.innerHeight / 92,\n        \"16n\": window.innerHeight / 70,\n        \"8n\": window.innerHeight / 60,\n        \"4n\": window.innerHeight / 52,\n        \"2n\": window.innerHeight / 43,\n        \"1m\": window.innerHeight / 35,\n        \"2m\": 30\n      }\n    };\n    state.cord = {\n      sounds: []\n    };\n  }\n\n  return appReducer(state, action);\n}","map":{"version":3,"sources":["/Users/garrett/repos/soundloop-cavs/src/reducers/index.js"],"names":["loops","tones","shared","cord","file","combineReducers","appReducer","state","action","type","data","playing","center","x","window","innerWidth","y","innerHeight","screenWidth","screenHeight","muted","mode","selectedSustain","fileName","volume","tempo","toneSizes","sounds"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAGD,eAAe,CAAC;AACjCL,EAAAA,KADiC;AAEjCC,EAAAA,KAFiC;AAGjCE,EAAAA,IAHiC;AAIjCD,EAAAA,MAJiC;AAKjCE,EAAAA;AALiC,CAAD,CAAlC;AAQA,eAAe,UAASG,KAAT,EAAgBC,MAAhB,EAAwB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjCF,IAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACE,IAAP,CAAYT,KAA1B;AACAM,IAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACE,IAAP,CAAYV,KAA1B;AACAO,IAAAA,KAAK,CAACL,MAAN,GAAe;AACbS,MAAAA,OAAO,EAAE,KADI;AAEbC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAE,MAAM,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,IAA4B,CAD/B;AAENC,QAAAA,CAAC,EAAEF,MAAM,CAACG,WAAP,GAAqB;AAFlB,OAFK;AAMbC,MAAAA,WAAW,EAAEJ,MAAM,CAACC,UANP;AAObI,MAAAA,YAAY,EAAEL,MAAM,CAACG,WAPR;AAQbG,MAAAA,KAAK,EAAE,KARM;AASbC,MAAAA,IAAI,EAAEb,MAAM,CAACE,IAAP,CAAYR,MAAZ,CAAmBmB,IATZ;AAUbC,MAAAA,eAAe,EAAE,IAVJ;AAWbC,MAAAA,QAAQ,EAAEf,MAAM,CAACE,IAAP,CAAYR,MAAZ,CAAmBqB,QAXhB;AAYbC,MAAAA,MAAM,EAAE,CAZK;AAabC,MAAAA,KAAK,EAAEjB,MAAM,CAACE,IAAP,CAAYR,MAAZ,CAAmBuB,KAbb;AAcbC,MAAAA,SAAS,EAAE;AACT,eAAOZ,MAAM,CAACG,WAAP,GAAqB,EADnB;AAET,eAAOH,MAAM,CAACG,WAAP,GAAqB,EAFnB;AAGT,cAAMH,MAAM,CAACG,WAAP,GAAqB,EAHlB;AAIT,cAAMH,MAAM,CAACG,WAAP,GAAqB,EAJlB;AAKT,cAAMH,MAAM,CAACG,WAAP,GAAqB,EALlB;AAMT,cAAMH,MAAM,CAACG,WAAP,GAAqB,EANlB;AAOT,cAAM;AAPG;AAdE,KAAf;AAwBAV,IAAAA,KAAK,CAACJ,IAAN,GAAa;AAAEwB,MAAAA,MAAM,EAAE;AAAV,KAAb;AACD;;AACD,SAAOrB,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAjB;AACD","sourcesContent":["import loops from \"./loops\";\nimport tones from \"./tones\";\nimport shared from \"./shared\";\nimport cord from \"./cord\";\nimport file from \"./file\";\nimport { combineReducers } from \"redux\";\n\n//  The index reducer combines all of the other reducers to form our store.\n//  We pass it into a higher-order function, appReducer,\n//  so that we can overwrite the overall state on file import.\n\nconst appReducer = combineReducers({\n  loops,\n  tones,\n  cord,\n  shared,\n  file\n});\n\nexport default function(state, action) {\n  if (action.type === \"IMPORT_FILE\") {\n    state.tones = action.data.tones;\n    state.loops = action.data.loops;\n    state.shared = {\n      playing: false,\n      center: {\n        x: 380 + (window.innerWidth - 380) / 2,\n        y: window.innerHeight / 2\n      },\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      muted: false,\n      mode: action.data.shared.mode,\n      selectedSustain: \"8n\",\n      fileName: action.data.shared.fileName,\n      volume: 0,\n      tempo: action.data.shared.tempo,\n      toneSizes: {\n        \"32n\": window.innerHeight / 92,\n        \"16n\": window.innerHeight / 70,\n        \"8n\": window.innerHeight / 60,\n        \"4n\": window.innerHeight / 52,\n        \"2n\": window.innerHeight / 43,\n        \"1m\": window.innerHeight / 35,\n        \"2m\": 30\n      }\n    };\n    state.cord = { sounds: [] };\n  }\n  return appReducer(state, action);\n}\n"]},"metadata":{},"sourceType":"module"}