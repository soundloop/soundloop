{"ast":null,"code":"import loops from \"./loops\";\nimport tones from \"./tones\";\nimport shared from \"./shared\";\nimport cord from \"./cord\";\nimport file from \"./file\";\nimport { combineReducers } from \"redux\"; // The index reducer combines all of the other reducers to form our store. We pass it into a higher-order function, appReducer, so that we can overwrite the overall state on file import.\n\nconst appReducer = combineReducers({\n  loops,\n  tones,\n  cord,\n  shared,\n  file\n});\nexport default function (state, action) {\n  if (action.type === \"IMPORT_FILE\") {\n    state.tones = action.data.tones;\n    state.loops = action.data.loops;\n    state.shared = {\n      playing: false,\n      center: {\n        x: 380 + (window.innerWidth - 380) / 2,\n        y: window.innerHeight / 2\n      },\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      loopCount: 1,\n      muted: false,\n      mode: action.data.shared.mode,\n      selectedSustain: \"8n\",\n      fileName: action.data.shared.fileName,\n      volume: 0,\n      tempo: action.data.shared.tempo,\n      toneSizes: {\n        \"32n\": 10,\n        \"16n\": 14,\n        \"8n\": 16,\n        \"4n\": 18,\n        \"2n\": 20,\n        \"1m\": 25,\n        \"2m\": 30\n      }\n    };\n    state.cord = {\n      sounds: [],\n      index: 0\n    };\n  }\n\n  return appReducer(state, action);\n}","map":{"version":3,"sources":["/Users/garrett/repos/soundloop-cavs/src/reducers/index.js"],"names":["loops","tones","shared","cord","file","combineReducers","appReducer","state","action","type","data","playing","center","x","window","innerWidth","y","innerHeight","screenWidth","screenHeight","loopCount","muted","mode","selectedSustain","fileName","volume","tempo","toneSizes","sounds","index"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,MAAMC,UAAU,GAAGD,eAAe,CAAC;AACjCL,EAAAA,KADiC;AAEjCC,EAAAA,KAFiC;AAGjCE,EAAAA,IAHiC;AAIjCD,EAAAA,MAJiC;AAKjCE,EAAAA;AALiC,CAAD,CAAlC;AAQA,eAAe,UAASG,KAAT,EAAgBC,MAAhB,EAAwB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjCF,IAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACE,IAAP,CAAYT,KAA1B;AACAM,IAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACE,IAAP,CAAYV,KAA1B;AACAO,IAAAA,KAAK,CAACL,MAAN,GAAe;AACbS,MAAAA,OAAO,EAAE,KADI;AAEbC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAE,MAAM,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,IAA4B,CAD/B;AAENC,QAAAA,CAAC,EAAEF,MAAM,CAACG,WAAP,GAAqB;AAFlB,OAFK;AAMbC,MAAAA,WAAW,EAAEJ,MAAM,CAACC,UANP;AAObI,MAAAA,YAAY,EAAEL,MAAM,CAACG,WAPR;AAQbG,MAAAA,SAAS,EAAE,CARE;AASbC,MAAAA,KAAK,EAAE,KATM;AAUbC,MAAAA,IAAI,EAAEd,MAAM,CAACE,IAAP,CAAYR,MAAZ,CAAmBoB,IAVZ;AAWbC,MAAAA,eAAe,EAAE,IAXJ;AAYbC,MAAAA,QAAQ,EAAEhB,MAAM,CAACE,IAAP,CAAYR,MAAZ,CAAmBsB,QAZhB;AAabC,MAAAA,MAAM,EAAE,CAbK;AAcbC,MAAAA,KAAK,EAAElB,MAAM,CAACE,IAAP,CAAYR,MAAZ,CAAmBwB,KAdb;AAebC,MAAAA,SAAS,EAAE;AACT,eAAO,EADE;AAET,eAAO,EAFE;AAGT,cAAM,EAHG;AAIT,cAAM,EAJG;AAKT,cAAM,EALG;AAMT,cAAM,EANG;AAOT,cAAM;AAPG;AAfE,KAAf;AAyBApB,IAAAA,KAAK,CAACJ,IAAN,GAAa;AAAEyB,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAAb;AACD;;AACD,SAAOvB,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAjB;AACD","sourcesContent":["import loops from \"./loops\";\nimport tones from \"./tones\";\nimport shared from \"./shared\";\nimport cord from \"./cord\";\nimport file from \"./file\";\nimport { combineReducers } from \"redux\";\n\n// The index reducer combines all of the other reducers to form our store. We pass it into a higher-order function, appReducer, so that we can overwrite the overall state on file import.\nconst appReducer = combineReducers({\n  loops,\n  tones,\n  cord,\n  shared,\n  file\n});\n\nexport default function(state, action) {\n  if (action.type === \"IMPORT_FILE\") {\n    state.tones = action.data.tones;\n    state.loops = action.data.loops;\n    state.shared = {\n      playing: false,\n      center: {\n        x: 380 + (window.innerWidth - 380) / 2,\n        y: window.innerHeight / 2\n      },\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      loopCount: 1,\n      muted: false,\n      mode: action.data.shared.mode,\n      selectedSustain: \"8n\",\n      fileName: action.data.shared.fileName,\n      volume: 0,\n      tempo: action.data.shared.tempo,\n      toneSizes: {\n        \"32n\": 10,\n        \"16n\": 14,\n        \"8n\": 16,\n        \"4n\": 18,\n        \"2n\": 20,\n        \"1m\": 25,\n        \"2m\": 30\n      }\n    };\n    state.cord = { sounds: [], index: 0 };\n  }\n  return appReducer(state, action);\n}\n"]},"metadata":{},"sourceType":"module"}