{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/3cavs/soundloop/src/components/Cord.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { Line, Layer, Circle } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport Konva from \"konva\";\nimport Tone from \"tone\";\nimport { tsConstructorType } from \"@babel/types\";\n/*\nCORD - The cord is the line from the center of the loop to the top of the window that plays sounds on tone hits\n\nThe Cord class contains a melodyPlayer, a PolySynth from tone.js that plays sounds on triggerAttackRelease()\nIt also contains a Konva Tween animation that animates between two states: \n  1. The inactive state. The cord is straight at a 90 degree angle\n  2. The active state on tone hits. The cord is \"plucked\" in the direction of tone rotation\n*/\n\nclass Cord extends React.Component {\n  constructor(props) {\n    super(props); // initialize values for the cord drawing\n    // this.max is the highest point of the cord on the page\n\n    this.pts = [];\n    this.max = this.props.height / 2 - 75;\n    this.interval = this.max / 2;\n    this.flux = 8;\n    this.x = this.props.center.x;\n    this.y = this.props.center.y;\n  }\n\n  componentDidMount() {\n    // melodyPlayer construction and settings\n    this.melodyPlayer = new Tone.PolySynth(3, Tone.SimpleSynth).set({\n      volume: 0,\n      oscillator: {\n        type: \"triangle\"\n      },\n      envelope: {\n        attack: 0.01,\n        decay: 0.1,\n        sustain: 0.2,\n        release: 1.7\n      }\n    }).toMaster();\n    this.melodyPlayer.stealVoices = false; // for loop that adds point coordinates to this.pts\n\n    for (var i = 0; i < 3; i++) {\n      this.pts.push(x);\n      this.pts.push(y);\n      this.x = this.x + this.flux;\n      this.y = this.y - this.interval;\n      this.flux = -this.flux;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // if window height changes, then recalculate the set of points for Tween\n    if (prevProps.height !== this.props.height) {\n      this.pts = [];\n      this.max = this.props.height / 2 - 75;\n      this.interval = this.max / 2;\n      this.x = this.props.center.x;\n      this.y = this.props.center.y; // for loop that adds point coordinates to this.pts\n\n      for (var i = 0; i < 3; i++) {\n        this.pts.push(x);\n        this.pts.push(y);\n        x = x + this.flux;\n        y = y - this.interval;\n        this.flux = -this.flux;\n      }\n    }\n\n    if (this.props.playing) {\n      this.tween = new Konva.Tween({\n        node: this.line,\n        duration: 0.1,\n        easing: Konva.Easings.EaseOut,\n        points: this.pts,\n        onFinish: function () {\n          this.tween.reverse();\n        }\n      });\n    }\n\n    if (this.props.volume !== prevProps.volume) {\n      Tone.Master.volume.value = this.props.volume;\n    }\n\n    if (this.props.sounds.length > 0 && prevProps.sounds !== this.props.sounds) {\n      if (!this.props.muted) {\n        this.melodyPlayer.triggerAttackRelease(this.props.sounds[this.props.index].sound, this.props.sounds[this.props.index].duration, undefined, (Math.random() * 0.5 + 0.5) * 0.8);\n      }\n\n      if (this.props.playing) {\n        this.tween.play();\n      }\n    }\n  }\n\n  render() {\n    var inactivePts = [];\n    this.max = this.props.height / 2 - 75;\n    this.interval = this.max / 2;\n    var x = this.props.center.x;\n    var y = this.props.center.y;\n\n    for (var i = 0; i < 3; i++) {\n      inactivePts.push(x);\n      inactivePts.push(y);\n      y = y - this.interval;\n    }\n\n    return React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Line, {\n      points: inactivePts,\n      stroke: \"#692D55\",\n      strokeWidth: 2,\n      tension: 0.5,\n      ref: node => {\n        this.line = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      x: this.props.center.x,\n      y: this.props.center.y - this.max,\n      radius: 4,\n      fill: \"#692D55\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      x: this.props.center.x,\n      y: this.props.center.y,\n      radius: 11,\n      fill: \"#692D55\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    center: state.shared.center,\n    playing: state.shared.playing,\n    muted: state.shared.muted,\n    sounds: state.cord.sounds,\n    index: state.cord.index,\n    height: state.shared.screenHeight,\n    volume: state.shared.volume\n  };\n}\n\nexport default connect(mapStateToProps)(Cord);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/3cavs/soundloop/src/components/Cord.js"],"names":["React","Line","Layer","Circle","connect","Konva","Tone","tsConstructorType","Cord","Component","constructor","props","pts","max","height","interval","flux","x","center","y","componentDidMount","melodyPlayer","PolySynth","SimpleSynth","set","volume","oscillator","type","envelope","attack","decay","sustain","release","toMaster","stealVoices","i","push","componentDidUpdate","prevProps","playing","tween","Tween","node","line","duration","easing","Easings","EaseOut","points","onFinish","reverse","Master","value","sounds","length","muted","triggerAttackRelease","index","sound","undefined","Math","random","play","render","inactivePts","mapStateToProps","state","shared","cord","screenHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { Line, Layer, Circle } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport Konva from \"konva\";\nimport Tone from \"tone\";\nimport { tsConstructorType } from \"@babel/types\";\n\n/*\nCORD - The cord is the line from the center of the loop to the top of the window that plays sounds on tone hits\n\nThe Cord class contains a melodyPlayer, a PolySynth from tone.js that plays sounds on triggerAttackRelease()\nIt also contains a Konva Tween animation that animates between two states: \n  1. The inactive state. The cord is straight at a 90 degree angle\n  2. The active state on tone hits. The cord is \"plucked\" in the direction of tone rotation\n*/\n\nclass Cord extends React.Component {\n  constructor(props){\n    super(props)\n    \n    // initialize values for the cord drawing\n    // this.max is the highest point of the cord on the page\n    this.pts = [];\n    \n    this.max = this.props.height / 2 - 75;\n    this.interval = this.max / 2;\n    this.flux = 8;\n    this.x = this.props.center.x;\n    this.y = this.props.center.y;\n  }\n\n  componentDidMount() {\n    // melodyPlayer construction and settings\n    this.melodyPlayer = new Tone.PolySynth(3, Tone.SimpleSynth)\n      .set({\n        volume: 0,\n        oscillator: {\n          type: \"triangle\"\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0.1,\n          sustain: 0.2,\n          release: 1.7\n        }\n      })\n      .toMaster();\n    this.melodyPlayer.stealVoices = false;\n    \n    // for loop that adds point coordinates to this.pts\n    for (var i = 0; i < 3; i++) {\n      this.pts.push(x);\n      this.pts.push(y);\n      this.x = this.x + this.flux;\n      this.y = this.y - this.interval;\n      this.flux = -this.flux;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // if window height changes, then recalculate the set of points for Tween\n    if (prevProps.height !== this.props.height){\n      this.pts = [];\n      this.max = this.props.height / 2 - 75;\n      this.interval = this.max / 2;\n      this.x = this.props.center.x;\n      this.y = this.props.center.y;\n      // for loop that adds point coordinates to this.pts\n      for (var i = 0; i < 3; i++) {\n        this.pts.push(x);\n        this.pts.push(y);\n        x = x + this.flux;\n        y = y - this.interval;\n        this.flux = -this.flux;\n      }\n    }\n\n    if (this.props.playing) {\n      this.tween = new Konva.Tween({\n        node: this.line,\n        duration: 0.1,\n        easing: Konva.Easings.EaseOut,\n        points: this.pts,\n        onFinish: function() {\n          this.tween.reverse();\n        }\n      });\n    }\n\n    if (this.props.volume !== prevProps.volume) {\n      Tone.Master.volume.value = this.props.volume;\n    }\n\n    if (\n      this.props.sounds.length > 0 &&\n      prevProps.sounds !== this.props.sounds\n    ) {\n      if (!this.props.muted) {\n        this.melodyPlayer.triggerAttackRelease(\n          this.props.sounds[this.props.index].sound,\n          this.props.sounds[this.props.index].duration,\n          undefined,\n          (Math.random() * 0.5 + 0.5) * 0.8\n        );\n      }\n\n      if (this.props.playing) {\n        this.tween.play();\n      }\n    }\n  }\n\n  render() {\n    var inactivePts = [];\n    this.max = this.props.height / 2 - 75;\n    this.interval = this.max / 2;\n    var x = this.props.center.x;\n    var y = this.props.center.y;\n    for (var i = 0; i < 3; i++) {\n      inactivePts.push(x);\n      inactivePts.push(y);\n      y = y - this.interval;\n    }\n\n    return (\n      <Layer>\n        <Line\n          points={inactivePts}\n          stroke=\"#692D55\"\n          strokeWidth={2}\n          tension={0.5}\n          ref={node => {\n            this.line = node;\n          }}\n        />\n        <Circle\n          x={this.props.center.x}\n          y={this.props.center.y - this.max}\n          radius={4}\n          fill=\"#692D55\"\n        />\n        <Circle\n          x={this.props.center.x}\n          y={this.props.center.y}\n          radius={11}\n          fill=\"#692D55\"\n        />\n      </Layer>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    center: state.shared.center,\n    playing: state.shared.playing,\n    muted: state.shared.muted,\n    sounds: state.cord.sounds,\n    index: state.cord.index,\n    height: state.shared.screenHeight,\n    volume: state.shared.volume\n  };\n}\n\nexport default connect(mapStateToProps)(Cord);\n"]},"metadata":{},"sourceType":"module"}